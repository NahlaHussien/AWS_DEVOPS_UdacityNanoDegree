# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # docker:
    #   - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Say hello"
  #         command: "echo Hello, World!"
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "say hello"
          command: |       
            echo Hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "say world"
          command: |      
            echo World
  print_env_var:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: "environment variable"
          command: |
            echo $My_Name
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: 
          name: "output.txt"
          command: |
            mkdir -p workspace
            echo "text to output here" > workspace/output.txt
      - persist_to_workspace:
          # root: workspace
          paths: 
            - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      # - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: output.txt #/workspace
      - run: |
          # name: "print_output_file_contents"        
          # command: |   
          if [[ `cat /workspace/output.txt` == "text to output here" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      # - say-hello
      - print_hello
      - print_world:
          requires:
            - print_hello
      - print_env_var
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
# # Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
# version: 2.1
# # Use a package of configuration called an orb.
# orbs:
#   # Declare a dependency on the welcome-orb
#   welcome: circleci/welcome-orb@0.4.1
# # Orchestrate or schedule a set of jobs
# jobs:
#   print_hello:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo hello
#   print_world:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo world
# workflows:
#   # Name the workflow "welcome"
#   welcome:
#     # Run the welcome/run job in its own container
#     jobs:
#       - print_hello
#       - print_world:
#           requires:
#             - print_hello